-#=stylesheet_link_tag "http://cdn.leafletjs.com/leaflet/v0.7.7/leaflet.css"
-#=javascript_include_tag "http://cdn.leafletjs.com/leaflet/v0.7.7/leaflet.js"
=stylesheet_link_tag "leaflet/leaflet"
=javascript_include_tag "leaflet/leaflet"
=javascript_include_tag"https://api.tiles.mapbox.com/mapbox.js/plugins/leaflet-markercluster/v0.4.0/leaflet.markercluster.js"
= stylesheet_link_tag 'http://leaflet.github.io/Leaflet.markercluster/dist/MarkerCluster.Default.css'
= stylesheet_link_tag 'http://leaflet.github.io/Leaflet.markercluster/dist/MarkerCluster.css'
-#=javascript_include_tag "leaflet/leaflet.markercluster-src"
-#=javascript_include_tag "leaflet/leaflet.markercluster"
-#=stylesheet_link_tag "leaflet/MarkerCluster.Default"
-#=stylesheet_link_tag "leaflet/MarkerCluster"
:scss
  #map{
    height: 80%;
    //height: calc (100vh - 130px);
  }
  .tender-categories{
    position: absolute;
    .cat-img{
      cursor: pointer;
      z-index: 2;
      top: 10px;
      left: 50px;
      display: inline-block;
      width: 50px;
      height: 50px;
      position: relative;
      //background-image: url("assets/default.png");
      //background-size: 50px 50px;
      img{
        width: 100%;
        height: 100%;
      }

    }
  }

.tender-categories
  - @tender_categories.each do |category|
    .cat-img{'data-category-id' => category.id.to_s}
      = image_tag(category.img.url || 'default.png')
  .cat-img{'data-category-id' => ''}
    = image_tag('')

#map

:javascript
    var markersLayer;
    var mymap = L.map('map').setView([49.23, 28.47], 9);

    L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}', {
        attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery Â© <a href="http://mapbox.com">Mapbox</a>',
        maxZoom: 20,
        id: 'quicks.0hf3cla6',
        accessToken: 'pk.eyJ1IjoicXVpY2tzIiwiYSI6ImNpcTE1Z2xyYzAwMm1pMm0ybXFoMW1hdzAifQ.NQB9Oj5QISGyxJ9FTvNK3Q'
    }).addTo(mymap);

    // Markers layer class
    function MarkersLayer(geoJson){
      this.geoJson = geoJson;
      this.layer;

      // function for each feature events handler
      function onEachFeature(feature, layer) {
        // by default event is click
        layer.on({
          click: function(e){
            $.ajax({
              url: 'tender/show_tender_info',
              data: {id: feature.properties.id},
              success: function(data){
                layer.bindPopup(data).openPopup();
              }

            })

          }
        })
        // if (feature.properties && feature.properties.title) {
          // get more info by ajax request
        //   $.ajax({
        //     url: 'home/show_tender_info',
        //     data: {id: feature.properties.id}
        //   })
        //   // layer.bindPopup(feature.properties.title).openPopup();
        // }
      }

      var LeafIcon = L.Icon.extend({
        options: {
            // shadowUrl: 'leaf-shadow.png',
            iconSize:     [28, 28],
            shadowSize:   [50, 64],
            iconAnchor:   [28, 28],
            // shadowAnchor: [4, 62],
            popupAnchor:  [-10, -28]
        }
      });

      function setIconByCategory(feature){
        return $('.cat-img[data-category-id= "' +feature.properties.category + '"]').find('img').attr('src') || 'assets/default.png';
      }
      // init this.layer as marker cluster layer
      this.init = function(filter){
        this.layer = L.markerClusterGroup();

        var layer = L.geoJson(this.geoJson, {
          onEachFeature: onEachFeature,
          // add filter for layer(by default is empty)
          filter: filter,
          pointToLayer: function (feature, latlng) {
            // {iconUrl: 'leaf-green.png'}
            return L.marker(latlng, {icon: new LeafIcon({iconUrl: setIconByCategory(feature)})});
        }
        });

        this.layer.addLayer(layer);
        mymap.addLayer(this.layer);
      }

    this.hideFromMap = function(){
      mymap.removeLayer(this.layer);
    }

    this.filterByCategories = function(category_id){
      this.hideFromMap();
      // if we choose some filter
      if(category_id){
        // add filter to init function
        return this.init(function(feature,layer){
          return feature.properties.category == category_id;
        })
      }
      // if we want drop all filters
      else{
        // return init without any filters
        return this.init();
      }

    }

      return this.init();

    }

  $(document).ready(function(){
    $.ajax({
      url : '/geo_json_tender',
      dataType: 'JSON',
      success: function(data) {
        markersLayer = new MarkersLayer(data);
       }
    })

    $('.cat-img').click(function(){
      markersLayer.filterByCategories($(this).data('category-id'));
    })
  });

